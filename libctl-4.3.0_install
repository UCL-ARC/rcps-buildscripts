#!/usr/bin/env bash

#######################
# libctl, required for MPB and Meep
#
#

# Remember to set LIBCTL_DIR=$prefix/share/libctl in module
#  --> meep and MPB use that variable to tell where to find it

set -e

PACKAGE_NAME="libctl"
PACKAGE_VERSION="4.3.0"

source includes/source_includes.sh
module purge
require gcc-libs
require compilers/gnu/4.9.2
require libtool
require libbdwgc/7.4.2/gnu-4.9.2
require guile/2.0.11/gnu-4.9.2

_env_setup() {
  OWD=$(pwd)
  INSTALL_PREFIX=${INSTALL_PREFIX:-/shared/ucl/apps/${PACKAGE_NAME}/${PACKAGE_VERSION}/${COMPILER_TAG}}
  BUILD_DIR=${BUILD_DIR:-$(mktemp -d)}
  MODULE_DIR=${MODULE_DIR:-$(mktemp -d)}
  SRC_URLS="https://github.com/NanoComp/libctl/releases/download/v${PACKAGE_VERSION}/libctl-${PACKAGE_VERSION}.tar.gz"
  SHA256SUM=${SHA256SUM:-c0ff5e0a3d81ed70240181552fe2c2381ed7928ea138115dcfa196e7310de674}
  BASENAME=$(basename -s .tar.gz $(cut -f 1 -d ' ' <<<"$SRC_URLS"))
}

_fetch_files() {
  cd "$BUILD_DIR"
  wget "$SRC_URLS"
  sha256sum -c <<<"$SHA256SUM  $BASENAME.tar.gz"
  cd "$OWD"
}

_setup_files() {
  cd "$BUILD_DIR"
  tar -xf "${BASENAME}.tar.gz"
  cd "$OWD"
}

_build() {
  cd "$BUILD_DIR"
  cd "${BASENAME}"
  ./configure --prefix="$INSTALL_PREFIX" --enable-shared
  make
  make check
  make install
  cd "$OWD"
}

_prepare_module() {
  make_module -p "$INSTALL_PREFIX" \
              -n "${PACKAGE_NAME}" \
              -c "${PACKAGE_NAME}" \
              -r "gcc-libs" \
              -r "libbdwgc/7.4.2/gnu-4.9.2" \
              -r "guile/2.0.11/gnu-4.9.2" \
              -v "LIBCTL_DIR \$prefix/share/libctl" \
              -o "$MODULE_DIR/${PACKAGE_NAME}/${PACKAGE_VERSION}${PACKAGE_VARIANT:+-${PACKAGE_VARIANT}}/${COMPILER_TAG}" \
              -w "Adds ${PACKAGE_NAME} ${PACKAGE_VERSION}${PACKAGE_VARIANT:+-${PACKAGE_VARIANT}} to your environment."
  echo "Module files put in: $MODULE_DIR" >&2
}

_clean_up() {
  if [ -n "$BUILD_DIR" ]; then
    rm -Rf "${BUILD_DIR}"
  fi
}

_env_setup
_fetch_files
_setup_files
_build
_prepare_module
_clean_up

