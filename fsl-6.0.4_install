#!/usr/bin/env bash

###############################################
# Installing FSL
#
# Using GNU 9.2.0 compilers to try and fix build issues.
# It looks like FSL now needs CUDA available for some tools otherwise
# the build fails.
# So also now using GNU 10.2.0
# Set up so this can be run from a job on a GPU node.
# Needed to make some config changes for CUDA on Myriad.
#
# June / July 2021

NAME=${NAME:-fsl}
VERSION=${VERSION:-6.0.4}
INSTALL_PREFIX=${INSTALL_PREFIX:-/shared/ucl/apps/$NAME/$VERSION/$COMPILER_TAG}
MD5=${MD5:-959fc96d6952a76c664c2766c7e01bfa}
SRC_ARCHIVE=${SRC_ARCHIVE:-https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-${VERSION}-sources.tar.gz}
PATCHES=${PATCHES:-/shared/ucl/apps/build_scripts/fsl-patches}

set -e

dirname=$(dirname $0 2>/dev/null || pwd)
INCLUDES_DIR=${INCLUDES_DIR:-${dirname}/includes}
source ${INCLUDES_DIR}/require_inc.sh

require compilers/gnu/4.9.2
require cuda/8.0.61-patch2/gnu-4.9.2
require hdf/5-1.8.15/gnu-4.9.2
require python2/recommended
require java/1.8.0_45
require qt/4.8.6/gnu-4.9.2
require vtk/6.2.0/gnu-4.9.2

# Check that we are on a GPU node and abort if not.

x=`which nvidia-smi`
if [ $? != 0 ]
then
    echo ''
    echo '****** ERROR: Not on a GPU node - building CUDA version of FSL must'
    echo '              be done on a GPU node - Aborting!'
    echo ''
    exit 1
fi
nvidia-smi

# Build keeps filling up /dev/shm so using ~ccsaapp/Software/FSL instead!

# temp_dir=~ccspapp/Software/FSL
temp_dir=~ccspapp/Scratch/Software/FSL_CUDA/$JOB_ID
mkdir -p $temp_dir

cd $temp_dir

rm -f $SRC_ARCHIVE
rm -rf $NAME
wget $SRC_ARCHIVE
archive=$(basename "${SRC_ARCHIVE}")

CHECKSUM=`md5sum $archive| awk '{print $1}'`

if [ "$MD5" == "$CHECKSUM" ]
then
  tar -xvf $archive
  export FSLDIR=$temp_dir/${NAME}

  cp $PATCHES/*.patch $FSLDIR
  cd $FSLDIR
  patch -p0 -i fsl-${VERSION}_fslconf.patch

  . ${FSLDIR}/etc/fslconf/fsl.sh
  # Use GNU 4.8 config from FSL 6.0.0 source
  cp -r /home/ccspapp/Software/FSL/fsl-6.0.0/config/linux_64-gcc4.8 $FSLDIR/config/$FSLMACHTYPE

  # patch systemvars after above copy
  #patch -p0 -i fsl-5.0.9_systemvars.patch

  sed -i.bak 's|scl enable devtoolset-2 -- c++|g++|g' $FSLDIR/config/$FSLMACHTYPE/systemvars.mk
  sed -i.bak 's|c++|g++|g' $FSLDIR/config/$FSLMACHTYPE/systemvars.mk

  # For CUDA on Myriad

  sed -i.bak '/^CUDA_/s|/opt/cuda-7.5|/shared/ucl/apps/cuda/8.0.61/gnu-4.9.2/|' $FSLDIR/config/$FSLMACHTYPE/systemvars.mk

  sed -i.bak 's|/home/fs0/cowboy/var/caper_linux_64-gcc4.4/VTK7/include/vtk-7.0|/shared/ucl/apps/vtk/6.2.0/gnu-4.9.2/include/vtk-6.2|g' $FSLDIR/config/$FSLMACHTYPE/externallibs.mk
  sed -i.bak 's|/home/fs0/cowboy/var/caper_linux_64-gcc4.4/VTK7/lib|/shared/ucl/apps/vtk/6.2.0/gnu-4.9.2/lib|g' $FSLDIR/config/$FSLMACHTYPE/externallibs.mk
  sed -i.bak 's|VTKSUFFIX = -7.0|VTKSUFFIX = -6.2|g' $FSLDIR/config/$FSLMACHTYPE/externallibs.mk
  sed -i.bak 's|-lz$|-lz -lgfortran|' $FSLDIR/src/libmeshutils/Makefile

  ./build

  mkdir -p $INSTALL_PREFIX
  if [ -d $INSTALL_PREFIX/fsl ]
  then
      mv -f $INSTALL_PREFIX/fsl $INSTALL_PREFIX/fsl-old
  fi
  cp -r $FSLDIR $INSTALL_PREFIX

  # Apply UCL patches - mainly for qsub.
  
cd $INSTALL_PREFIX/fsl/bin
patch -p0 --ignore-whitespace -i ../fsl-${VERSION}_parallel.patch

export FSLDIR=$INSTALL_PREFIX/$NAME
cd  $FSLDIR
rm -rf fslpython
$FSLDIR/etc/fslconf/fslpython_install.sh

# Install a suitable version of eddy - not sure if we need this so commenting out.

# cd bin
# wget https://fsl.fmrib.ox.ac.uk/fsldownloads/patches/eddy-patch-fsl-5.0.11/centos6/eddy_openmp
# chmod a+x eddy_openmp

else
  echo "Hash mismatch."
  echo "Expected: $MD5"
  echo "Got: $CHECKSUM"
fi
