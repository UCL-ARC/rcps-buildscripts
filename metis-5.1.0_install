#!/usr/bin/env bash

set -o errexit -o nounset
for i in ${includes_dir:=$(dirname $0 2>/dev/null)/includes}/{module_maker,require}_inc.sh; do . $i; done

package_name="metis"
package_version="5.1.0"
src_urls="http://glaros.dtc.umn.edu/gkhome/fetch/sw/metis/metis-${package_version}.tar.gz"
# Optional: 
# package_variant=""
package_description="METIS is a set of serial programs for partitioning graphs, partitioning finite element meshes, and producing fill reducing orderings for sparse matrices."

actual_file_name=metis-${package_version}.tar.gz
actual_file_md5=5465e67079419a69e0116de24fce58fe

module purge
require gcc-libs/4.9.2
require compilers/intel/2015/update2

_env_setup() {
  owd=$(pwd)
  package_label="${package_name}/${package_version}${package_variant:+-${package_variant}}/${COMPILER_TAG}"
  install_prefix=${INSTALL_PREFIX:-/shared/ucl/apps/$package_label}
  build_dir=${BUILD_DIR:-$(mktemp -d -t ${package_name}-build.XXXXXXXX)}
  module_dir=${MODULE_DIR:-$(mktemp -d -t ${package_name}-modules.XXXXXXXX)}
  basename=${basename:-$(basename -s .tar.gz $(cut -f 1 -d ' ' <<<$src_urls))}
  cd $build_dir
}

_fetch_files() {
  wget ${actual_file_name:+-O $actual_file_name} $src_urls
  md5sum -c <<<"$actual_file_md5  $actual_file_name"
}

_setup_files() {
  tar -xf $actual_file_name
}

_build() {
  cd ${basename}
  make config prefix="$install_prefix"
  make
  make install
  make distclean
  echo "Installed to: $install_prefix"
}

_prepare_module() {
  make_module -p $install_prefix \
              -c "${package_name}" \
              -r "gcc-libs/4.9.2" \
              -r "compilers/intel/2015/update2" \
              -o $module_dir/$package_label \
              -w "Adds ${package_name} ${package_version} to your environment. $package_description"
  echo "Module files put in: $module_dir" >&2
  chmod a+rx $module_dir
}

_clean_up() {
  cd $owd
  if [ -n "$build_dir" ]; then
    rm -Rf ${build_dir}
  fi
}

_env_setup
_fetch_files
_setup_files
_build
_prepare_module
_clean_up

