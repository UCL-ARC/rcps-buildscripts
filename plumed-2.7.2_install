#!/usr/bin/env bash

###############################################
# Installing PLUMED
#
#  Uses libmatheval
#   which requires flex (else you get an undefined symbol yywrap error)
#
#  To build with gcc run with GCC=yes ./plumed-2.5.2_install

NAME=${NAME:-plumed}
VERSION=${VERSION:-2.7.2}
SRC_ARCHIVE=${SRC_ARCHIVE:-https://github.com/plumed/plumed2}
BUILD_DIR=${BUILD_DIR:-$(mktemp -d -p /dev/shm -t "${NAME}"-build.XXXXXXXX)}
GCC=${GCC:-no}

set -e

# require modules for building
source includes/source_includes.sh
module purge
module load gcc-libs
module load git/2.32.0

if [ "$GCC" == "no" ]
then
  module load compilers/intel/2020/release
  module load mpi/intel/2019/update6/intel
else
  module load compilers/gnu/4.9.2
  module load mpi/openmpi/3.1.1/gnu-4.9.2
  module load openblas/0.2.14/gnu-4.9.2
fi

module load flex
module load libmatheval

# set once we know which modules are loaded
INSTALL_PREFIX=${INSTALL_PREFIX:-/shared/ucl/apps/$NAME/$VERSION/$COMPILER_TAG/$BLAS_TAG}

cd "$BUILD_DIR"

git clone "$SRC_ARCHIVE"

cd plumed2
git checkout v${VERSION}

# Disable Intel only options if we detect GCC
# fp-model precise required to make the tests pass
IFCORE="-lifcore"
ISTRICT="-fp-model precise"
#IOPTS="-vec -axSSE4.2,AVX"
IOPTS="-axSSE4.2,AVX,CORE-AVX512 -finline -funroll-loops -vec"

if [ "$COMPILER_TAG" == "gnu-4.9.2" ]
then
  IFCORE=""
  ISTRICT=""
  IOPTS=""
fi

if [ "$BLAS_TAG" == "openblas" ]
then
  ./configure --prefix="$INSTALL_PREFIX" CXX=mpicxx CC=mpicc FC=mpif90 LDFLAGS="-L${OPENBLASROOT}/lib" LIBS="-lopenblas ${IFCORE} -lmatheval -lfl" CXXFLAGS="-O3 ${IOPTS} ${ISTRICT}"
else
  ./configure --prefix="$INSTALL_PREFIX" CXX=mpicxx CC=mpicc FC=mpif90 LIBS="-mkl ${IFCORE} -lmatheval -lfl" CFLAGS="-O1 ${IOPTS} ${ISTRICT}"  CXXFLAGS="-O1 ${IOPTS} ${ISTRICT}"
fi
# Turn on Crystallization module
touch src/crystallization.on

make 2>&1 | tee make.log
make install
  
# The tests also *seem* to require you to have already installed PLUMED into a prefix
export PATH="$INSTALL_PREFIX/bin:$PATH"
export CPATH="$INSTALL_PREFIX/include:$CPATH"
export LIBRARY_PATH="$INSTALL_PREFIX/lib:$LIBRARY_PATH"
export LD_LIBRARY_PATH="$INSTALL_PREFIX/lib:$LD_LIBRARY_PATH"

make check 2>&1 | tee test.log

