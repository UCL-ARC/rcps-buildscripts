#!/usr/bin/env bash

###############################################
# Installing VASP for GPU
#  using NVHPC SDK and its compilers, CUDA and MPI.
# 

set -e

package_name="vasp"
package_version="6.5.0-17Dec2024"
package_variant="gpu"

for i in $(dirname -- "$0" 2>/dev/null)/includes/{module_maker,require,tools}_inc.sh; do . $i; done

_env_setup() {
    module purge
    require  gcc-libs/4.9.2
    require  compilers/nvidia/hpc-sdk/22.1
    require  fftw/3.3.10/nvidia-22.1
    require  hdf/5-1.10.5/gnu-4.9.2

    vasp_access_group=legvasp6

    make_build_env

    package_store="${PKG_STORE:-/shared/ucl/apps/pkg-store/VASP-20241217}"
    package_file="vasp.6.5.0.tgz"
    unpack_dir="vasp.6.5.0"
    ucl_makefile="/shared/ucl/apps/build_scripts/files/vasp-6.5.0_makefile.include.nvhpc"

}


_file_setup() {
  cd "$build_dir"

  cp "$package_store/$package_file" "./$package_file"

  sha256sum -c <<< "7836f0fd2387a6768be578f1177e795dc625f36f19015e31cab0e81154a24196 $package_file"

  tar -xf $package_file
}

_pre_build() {
  cd "$unpack_dir"
  cp "$ucl_makefile" ./makefile.include
  cd ..
}

_build() {
  cd "$unpack_dir"
  make std gam ncl # all now builds GPU stuff as well in spite of docs
  cd ..
}

_post_build() {
  mkdir -p "$install_prefix"
  chgrp -R "$vasp_access_group" "$install_prefix"
  mkdir -p "$install_prefix/bin"
  'cp' -v "$unpack_dir"/bin/vasp* "$install_prefix/bin"
  chgrp -R "$vasp_access_group" "$install_prefix"
  chmod -R o-rwx "$install_prefix"

  # These are fiddlier to deal with now -- will separate from VASP exe installs
  #mkdir -p "$install_prefix/potentials"
  #'cp' -v potentials/* "$install_prefix/potentials/"
}

_clean_up() {
  #rm -Rf ${temp_dir:-ERROR_TEMP_DIR_NOT_SET}
  :
}

_env_setup
_file_setup
_pre_build
_build
_post_build
_clean_up

