#!/bin/bash

set -o errexit \
    -o nounset

package_name="dymola"
package_version="2020.1-1"
package_description="Dymola is a commercial modeling and simulation environment based on the open Modelica modeling language."

source includes/source_includes.sh

module purge

make_build_env --tmp-root="/dev/shm"

cd "$build_dir"

printf "Unzipping Dymola bundle..."
unzip -q /shared/ucl/apps/pkg-store/Dymola_2020.AM_CAT_Dymola.Linux64.1-1.zip
printf " done.\n"

rpm_dir="$build_dir/AM_CAT_Dymola.Linux64/1/linux_x86_64"

cd "$install_prefix"

for an_rpm in "$rpm_dir"/*.rpm; do
    printf "Unpacking RPM $(basename "$an_rpm") ... "
    rpm2cpio "$an_rpm" | cpio -id
done

# Hoist the stuff they want to put in /usr/man
mv usr/local/man ./

# And then burn the rest (the actual application unpacks to opt/)
rm -Rf usr

# Make our own wrapper script for running it
mkdir bin
cat >bin/dymola-2020-x86_64 <<EOF
#!/bin/bash
export DYMOLA="$install_prefix/opt/dymola-2020-x86_64"
export LD_LIBRARY_PATH=\$DYMOLA/bin/lib64:\$DYMOLA/bin/lib:\$LD_LIBRARY_PATH
exec \$DYMOLA/bin64/dymola "$@"
EOF
chmod +x bin/dymola-2020-x86_64
ln -s dymola-2020-x86_64 bin/dymola

# And a license file
cat >opt/dymola-2020-x86_64/insert/dymola.lic <<EOF
SERVER lic-dymola.ucl.ac.uk ANY 27009
VENDOR dynasim
USE_SERVER
EOF

make_module_v2 \
    -d \
    -r gcc-libs \
    -r xorg-utils \
    -r mesa \
    -v DYMOLA="$install_prefix/opt/dymola-2020-x86_64"
    -e PATH:"$install_prefix"/bin \
    -e PATH:"$install_prefix"/opt/dymola-2020-x86_64/insert \
    -e LD_LIBRARY_PATH:"$install_prefix"/opt/dymola-2020-x86_64/lib
chmod -R +rX "$module_dir"
cp -r "$module_dir" "$install_prefix/.tcl_env_modules.generated"

rm -Rf "${build_dir:?error: tried to rm blank}" "${module_dir:?error: tried to rm blank}"

post_build_report

